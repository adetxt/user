syntax = "proto3";

package account.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service AccountService {
    rpc GetUsers (GetUsersRequest) returns (GetUsersResponse) {
        option (google.api.http) = {
            get: "/api/v1/users"
        };
    }

    rpc GetCurrentUser (google.protobuf.Empty) returns (GetUserResponse) {
        option (google.api.http) = {
            get: "/api/v1/user/current"
        };
    }

    rpc GetUser (GetUserRequest) returns (GetUserResponse) {
        option (google.api.http) = {
            get: "/api/v1/user"
        };
    }

    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/api/v1/user",
            body: "*"
        };
    }

    rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/v1/user",
            body: "*"
        };
    }

    rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/user/{id}",
        };
    }

    rpc GetRoles (google.protobuf.Empty) returns (GetRolesResponse) {
        option (google.api.http) = {
            get: "/api/v1/rbac/roles"
        };
    }
}

message User {
    int32 id = 1;
    string name = 2;
    string email = 3;
    repeated string roles = 4;
}

message Role {
    string name = 2;
    repeated string permissions = 3;
}

message GetUsersRequest {
    int32 page = 1;
    int32 pageSize = 2 [json_name="page_size"];
    string keyword = 3;
}

message GetUsersResponse {
    repeated User items = 1;
    int32 page = 2;
    int32 pageSize = 3 [json_name="page_size"];
    int32 total = 4;
}

message GetUserRequest {
    int32 id = 1;
    string email = 2;
}

message GetUserResponse {
    User user = 1;
}

message CreateUserRequest {
    int32 id = 1;
    string name = 2;
    string email = 3;
    string password = 4;
    string passwordValidation = 5 [json_name="password_validation"];
}

message CreateUserResponse {
    int32 id = 1;
}

message UpdateUserRequest {
    int32 id = 1;
    string name = 2;
    string email = 3;
    string password = 4;
    string passwordValidation = 5 [json_name="password_validation"];
    repeated string roles = 6;
}

message DeleteUserRequest {
    int32 id = 1;
}

message GetRolesResponse {
    repeated Role items = 1;
}